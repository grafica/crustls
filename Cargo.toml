[package]
name = "crustls"
version = "0.3.0"
authors = ["Jacob Hoffman-Andrews <github@hoffman-andrews.com>"]
description = "C-to-rustls bindings"
edition = "2018"

[dependencies]
# Keep in sync with RUSTLS_CRATE_VERSION in lib.rs
rustls = { version = "^0.19.0", features = [ "dangerous_configuration" ] }
webpki = "0.21"
libc = "0.2"
rustls-native-certs = "0.5.0"
sct = "0.6.0"
rustls-pemfile = "0.2.0"

[dev_dependencies]
cbindgen = "*"

[lib]
name = "crustls"
crate-type = ["staticlib"]

[package.metadata.raze]
# The path at which to write output files.
#
# `cargo raze` will generate Bazel-compatible BUILD files into this path.
# This can either be a relative path (e.g. "foo/bar"), relative to this
# Cargo.toml file; or relative to the Bazel workspace root (e.g. "//foo/bar").
workspace_path = "//cargo"

# This causes aliases for dependencies to be rendered in the BUILD
# file located next to this `Cargo.toml` file.
package_aliases_dir = "."

# The set of targets to generate BUILD rules for.
targets = [
    "x86_64-apple-darwin",
    "x86_64-pc-windows-msvc",
    "x86_64-unknown-linux-gnu",
]

# The two acceptable options are "Remote" and "Vendored" which
# is used to indicate whether the user is using a non-vendored or
# vendored set of dependencies.
genmode = "Remote"

[package.metadata.raze.crates.ring.'0.16.20']
data_attr = 'glob(["**/src/data/*", "**/src/ec/**/*.der"])'

[package.metadata.raze.crates.webpki.'0.21.4']
data_attr = 'glob(["**/src/data/*"])'

[package.metadata.raze.crates.cbindgen.'0.18.0']
extra_aliased_targets = [
    "cargo_bin_cbindgen"
]