

genrule(
    name = "crustls_h",
    srcs = [
        "metadata.json",
        "cbindgen.toml",
        "Cargo.toml",
        "Cargo.lock",
        "//src:rust_srcs",
    ] + glob(["src/**"]),
    outs = ["crustls.h"],
    cmd = '''sed "s#CARGO_CRATE_PATH#$$(pwd)#g" metadata.json > treated-metadata.json && \
    PATH=$$PATH:$(location //:cargo) $(location //:cargo_bin_cbindgen) --lockfile $(location Cargo.lock) --metadata treated-metadata.json --config $(location //:cbindgen.toml) --lang C > $(location crustls.h)
    ''',
    tools = [
        "//:cargo_bin_cbindgen",
        "//:cargo",
    ],
)

alias(
    name = "cargo",
    actual = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": "@rust_darwin_aarch64//:cargo",
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": "@rust_linux_aarch64//:cargo",
        "@rules_rust//rust/platform:x86_64-apple-darwin": "@rust_darwin_x86_64//:cargo",
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": "@rust_windows_x86_64//:cargo",
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": "@rust_linux_x86_64//:cargo",
    }),
)

alias(
    name = "rustc",
    actual = select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": "@rust_darwin_aarch64//:rustc",
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": "@rust_linux_aarch64//:rustc",
        "@rules_rust//rust/platform:x86_64-apple-darwin": "@rust_darwin_x86_64//:rustc",
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": "@rust_windows_x86_64//:rustc",
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": "@rust_linux_x86_64//:rustc",
    }),
)

platform(
    name = "docker_image_platform",
    constraint_values = [
        "@bazel_tools//platforms:x86_64",
        "@bazel_tools//platforms:linux",
        "@bazel_tools//tools/cpp:clang",
    ],
    exec_properties = {
        "OSFamily": "Linux",
        "container-image": "docker://gcr.io/gem5-test/ubuntu-20.04_all-dependencies",
    },
)
